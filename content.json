{"meta":{"title":"seven","subtitle":"有趣","description":null,"author":"MagginZ","url":"http://yoursite.com"},"pages":[],"posts":[{"title":"Ionic 应用样式一","slug":"20171121","date":"2017-11-21T14:23:48.000Z","updated":"2017-11-21T14:47:09.622Z","comments":true,"path":"2017/11/21/20171121/","link":"","permalink":"http://yoursite.com/2017/11/21/20171121/","excerpt":"","text":"Ionic样式比较多，先来这几个 AlertController Button Card FAB Grid List Slides loadingController ModalController ### AlertController需要三步：123456789101112131415①引入import &#123;AlertController&#125; from 'ionic-angular'②实例化constructor(public myAlertCtrl:AlertController)&#123;&#125;③调用let myWIndow = this.myAlertCtrl.create(&#123; title:\"\", message:'', handler:function()&#123;&#125;, role:'cancel'//只要取消，就会调用方法&#125;);myWIndwow.present(); ### Button1&lt;button ion-button color=\"\"&gt;&lt;/button&gt;&lt;!--color=\"primary/danger/secondart/lingt/dark\"--&gt;1.自定义常用颜色src/theme/variables.scss $colors 进行设置123$colors:( myPink:pink;)2.ion-button其他常用属性 2.1:只显示边框的按钮 /outline 2.2:只显示文本 /clear 2.3:圆角效果 /round 2.4：图标按钮 123&lt;button ion-button color=\"light\" icon-left&gt; &lt;ion-icon name=\"home\"&gt;&lt;/ion-icon&gt;&lt;/button&gt; 图标官网(http://ionicframework.com/docs/ionicons/index.html) 图标颜色可使用color属性自定义颜色，也可以设置style:”color:颜色” 2.5:图标大小 1234&lt;button ion-button small&gt;small&lt;/button&gt; &lt;button ion-button&gt;默认&lt;/button&gt; &lt;button ion-button large &gt;large&lt;/button&gt; &lt;button ion-button block&gt;block&lt;/button&gt; ### Card 用法： 123ion-card ion-card-header ion-card-content 出现的是卡片的样子，类似于名片？？差不多吧，可以将图片放在header中间，content里面写内容 ### FAB 悬浮式按钮123456789101112131415&lt;ion-content padding&gt;&lt;ion-fab side=\"right\"&gt; &lt;button ion-fab icon-noly &gt; &lt;ion-icon name=\"leaf\"&gt;&lt;/ion-icon&gt; &lt;/button&gt; &lt;ion-fab-list &gt; &lt;button ion-fab&gt;&lt;ion-icon name=\"logo-facebook\"&gt;&lt;/ion-icon&gt;&lt;/button&gt; &lt;button ion-fab&gt; &lt;ion-icon name=\"logo-twitter\"&gt;&lt;/ion-icon&gt;&lt;/button&gt; &lt;button ion-fab&gt;&lt;ion-icon name=\"logo-vimeo\"&gt;&lt;/ion-icon&gt;&lt;/button&gt; &lt;button ion-fab&gt;&lt;ion-icon name=\"logo-github\"&gt;&lt;/ion-icon&gt;&lt;/button&gt; &lt;/ion-fab-list&gt;&lt;/ion-fab&gt;&lt;/ion-content&gt;&lt;!--side属性取值:\"left/right/bottom/top/middle\"--&gt;### 注意：side属性设置在最外层ion-fab上，控制整体按钮的方向，side属性设置在ion-fab-list上，控制悬浮按钮的方向 ### Gridgrid的基本用法：指定一个容器为ion-grid行是通过ion-row去指定列是通过ion-col去指定1.可添加多列，类似bootstrap，多列之间不指定列等分，按照均等分实现排列。指定列的等分使用 col- 或col--,指定列宽为整体宽度的x/122.距离左边列的偏移量offset-3.纵向对齐方式align-itens-satrt/center/end -一行的所有列align-self-start/center/end -当前这一列自己4.横向justify-content-start/center/end5.设置距离边界的距离push- 向右移动pull- 向左移动 ### List3种，分别是图标列表，联系人头像列表，缩略图列表高级用法：滑动列表基本用法12ion-list ion-item //(ion-item 是支持列表项内部的对齐，可以通过item-start/end进行左右对齐)分组列表用法123ion-item-group ion-item-divider //指定分隔符内容 ion-item //具体的内容图标列表123ion-list ion-item ion-icon联系人列表12ion-list ion-list效果如分组列表常见的列表一 —– avatar list1234ion-list ion-item ion-avatar &lt;img/&gt;常见的列表一 —– thumbnail list1234ion-list ion-item ion-thumbnailr &lt;img/&gt;高级列表一 —– 侧滑动列表(qq联系人滑动效果)1234567891011121314151617181920212223242526272829&lt;ion-list&gt; &lt;ion-item-sliding&gt; &lt;ion-item&gt; &lt;ion-icon name=\"star\"&gt;&lt;/ion-icon&gt; &lt;/ion-item&gt; &lt;!--side是指选项按钮显示在item的左边或右边--&gt; &lt;ion-item-options side=\"right\"&gt; &lt;button ion-button color=\"secondary\"&gt;关注&lt;/button&gt; &lt;button ion-button color=\"gander\"&gt;删除&lt;/button&gt; &lt;/ion-item-options&gt; &lt;/ion-item-sliding&gt;&lt;/ion-list&gt;``` &lt;/div&gt;&lt;hr&gt;&lt;div id=\"slides\"&gt;### Slides 做轮播图效果/可做新手教程 &lt;h3&gt;语法&lt;/h3&gt;``` bashion-slides ion-slide ion-slideion-slides所支持属性：effect : 轮播样式 slide (默认),fade,cube,coverflow or flipspeed 动画时长autoplay 自动轮播，可指定切换时间direction 纵向/横向轮播 默认horizontal 横向，vertical纵向/ loop 循环pager 小圆点paginationType: bullets（默认）,fraction （/）,progress（可视化进度条） ### LoadingController实现步骤12345678910111、引入 import &#123;LoadingController&#125; from 'ionic-angular'2、实例化 constructor(public myLoadCtrl:LoadingController)&#123;&#125;3、调用 let myLoading = this.myLoadCtrl.create(&#123; content:'', duration:'' &#125;) myLoading.present(); myLoading.dismiss(); ### ModalController 自定义模态窗实现步骤12345678910111213141516171819201.引入import&#123;ModalController&#125; from 'ionic-angular'2.实例化constructor(public myModalCtrl:ModalController)&#123;&#125;3.创建3.1:创建一个组件 在组件中可以关闭一个模态窗呢？ import &#123;ViewController&#125; from 'ionic-angular' constructor(public myViewCtrl:ViewController)&#123;&#125; //myViewCtrl指的就是模态窗 this.myViewCtrl.dismiss()3.2：声明组件 分别在declarations和entryComponents进行声明3.3：引入对应的组件类，比如LoginComponent3.4:创建模态窗let modal=this.myModal.create(LoginComponent); 3.5:显示模态窗 modal.present();","categories":[],"tags":[]},{"title":"关于Ionic的一些东西","slug":"20171120","date":"2017-11-20T10:38:45.000Z","updated":"2017-11-20T14:39:27.429Z","comments":true,"path":"2017/11/20/20171120/","link":"","permalink":"http://yoursite.com/2017/11/20/20171120/","excerpt":"","text":"啊今天学习了Ionic，想记下来手册参考 Ionic 1.搭建开发环境①安装ionic (有可能会用到的cordova)1npm install -g cordova ionic ②创建一个模板项目 1ionic start myApp tabs/sideMenu/blank 创建一个使用tabs模板/侧边栏菜单模板/空白的模板项目 1ionic start myApp sideMenu 创建一个基于侧边栏菜单的模板项目，项目的名称叫做myApp ③进入到开发模式 //进入到当前目录下的myApp文件夹 1cd myApp //启动开发服务器 1ionic serve 2.Ionic启动开发服务器执行流程1ionic serve Ionic中 主要是在src的pages目录 通过创建page来构造app ①Ionic是基于模块的，在app中有main.ts，指定了启动的根模块为AppModule②在AppModule中 ，发现指定的根组件是由ionic-angular所提供的IonicApp③在app.module.ts中IonicModule.forRoot(MyApp)通过IonicApp和myApp就建立起联系了，可以认为IonicApp就是以myApp为根组件④在app.component.ts中 指定了模板内容为app.html在app.html中 将HelloIonicPage设置为当前的root 3.Ionic中page创建、使用的基本步骤①创建一个page1ionic g page demo01 创建一个叫做demo01的页面类，最终会在src的pages目录中生成一个demo01的文件夹，在该文件夹中有对应的类和模板 ②声明1234567import &#123;Demo01Page&#125; from '../pages/demo01/demo01'@NgModule(&#123; delclarations:[Demo01Page], entryComponents:[Demo01Page]&#125;) ③调用选择1：可以选择去通过导航 访问（现在还没有学） 选择2：将Demo01Page ，引入到app.component.ts,设置为rootPage","categories":[],"tags":[{"name":"/","slug":"","permalink":"http://yoursite.com/tags//"}]},{"title":"Hello World","slug":"hello-world","date":"2017-11-19T07:04:44.942Z","updated":"2017-11-19T07:04:44.942Z","comments":true,"path":"2017/11/19/hello-world/","link":"","permalink":"http://yoursite.com/2017/11/19/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}